name: build0411

on:
  push:
    paths-ignore:
    - '**.md'
    - 'circuit'

jobs:
  build:
    runs-on: ubuntu-20.04
    continue-on-error: false
    strategy:
      matrix:
        target-hardware: [esp8266, esp32, esp32c3]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install common dependencies
      run: |
        # Assuming the required packages are already listed in a file named 'dependencies.txt'
        cat dependencies.txt | xargs apt-get install -y

    - name: Download and install esptool
      run: |
        # Download specific version of esptool for each target
        # This avoids the use of sudo and hard-coded versions
        curl -LJO https://github.com/espressif/esptool/releases/download/v4.6.2/esptool-v4.6.2-$(uname -m).zip
        unzip esptool-v4.6.2-$(uname -m).zip
        mv esptool/esptool.py .

    - name: before_install & install (esp8266 specific)
      if: matrix.target-hardware == 'esp8266'
      run: |
        # Combine the steps that were previously separate for clarity
        python idf.py fullclean
        python idf.py build

    - name: Merge bin files for all targets
      if: matrix.target-hardware != 'esp8266'
      run: |
        # Simplify the merging process by parameterizing the offset
        OFFSET=${{ matrix.target-hardware == 'esp32' ? '0x1000' : '0x0' }}
        python esptool.py --chip ${{ matrix.target-hardware }} merge_bin -o build/wireless_esp_dap_full.bin 0x$OFFSET build/bootloader/bootloader.bin 0x8000 build/partition_table/partition-table.bin 0x10000 build/wireless_esp_dap.bin
        mv build/wireless_esp_dap.bin build/wireless_esp_dap_app.bin

    - name: Upload firmware
      uses: actions/upload-artifact@v2
      with:
        name: firmware_${{ matrix.target-hardware }}.zip
        path: |
          build/wireless_esp_dap_full.bin
          build/wireless_esp_dap_app.bin
          build/bootloader/bootloader.bin
          build/partition_table/partition-table.bin
